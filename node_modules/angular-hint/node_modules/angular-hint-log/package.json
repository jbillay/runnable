{
  "name": "angular-hint-log",
  "version": "0.3.0",
  "description": "tool for logging angular-hint messages",
  "main": "hint-log.js",
  "devDependencies": {
    "karma": "0.12.16",
    "karma-chrome-launcher": "^0.1.4",
    "karma-coverage": "~0.1.4",
    "karma-firefox-launcher": "^0.1.3",
    "karma-jasmine": "^0.1.5"
  },
  "scripts": {
    "test": "karma start karma-sauce.conf.js"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/angular/angular-hint-log"
  },
  "author": {
    "name": "ealtenho"
  },
  "license": "apache 2",
  "bugs": {
    "url": "https://github.com/angular/angular-hint-log/issues"
  },
  "homepage": "https://github.com/angular/angular-hint-log",
  "dependencies": {
    "browserify": "^4.2.0",
    "gulp": "^3.8.5",
    "karma-bro": "^0.6.0",
    "karma-coverage": "^0.2.4",
    "karma-sauce-launcher": "^0.2.9",
    "watchify": "^0.10.2"
  },
  "readme": "# Angular Hint Log [![Build Status](https://travis-ci.org/angular/angular-hint-log.svg?branch=master)](https://travis-ci.org/angular/angular-hint-log) [![Code Climate](https://codeclimate.com/github/angular/angular-hint-log/badges/gpa.svg)](https://codeclimate.com/github/angular/angular-hint-log)\n\nA library to format messages for [AngularHint](https://github.com/angular/angular-hint).\n\nSee the [NPM Module](https://www.npmjs.org/package/angular-hint-log).\n\n## Usage\n\n###1. Overview\n\n  AngularHint provides runtime hinting for AngularJS. This hinting relies on various\nAngularHint modules that cover different areas of AngularJS such as controllers and modules. To\ncollect and format the messages from these various modules, AngularHintLog provides a message\nqueue. Inside this message queue, messages are categorized according to their source module. This\nallows AngularHint to provide grouped messages.\n\n###2. API\n\n####[logMessage](https://github.com/angular/angular-hint-log/blob/master/hint-log.js#L14)\n----------------\n#####Use as: logMessage(message)\n\nLog a message to the AngularHintLog queue.\n\n####Example\n\n```javascript\nvar hintLog = require('angular-hint-log');\n\nhintLog.logMessage('##Controllers## The best practice is to name controllers with \"Controller\"');\n```\n\n####Params\nParam | Type | Description\n---   | ---  | ---\nmessage | String | A message that includes the module name delimited by `##` in the form of `'##ModuleName## Message to log'`\n\n\n####[flush](https://github.com/angular/angular-hint-log/blob/master/hint-log.js#L37)\n----------------\n#####Use as: flush()\n\nReturn - and empty - the current AngularHintLog queue.\n\n####Example\n\n```javascript\nvar hintLog = require('angular-hint-log');\n\nhintLog.logMessage('##Controllers## The best practice is to name controllers with \"Controller\"');\n//Assigns the queue to 'log'\nvar log = hintLog.flush();\n//Assigns 'The best practice is to name controllers with \"Controller\"' to 'message1'\nvar message1 = Object.keys(log['Controllers']);\n//Assigns an empty object as the queue is now empty\nvar empty = hintLog.flush();\n```\n\n####Returns\n\nType | Description\n---  | ---\nObject| An Object with keys representing names of modules identified by `##` syntax. Each module name is keyed to an object representing that module's messages. Messages not logged with the `##` name syntax are keyed to `General`.\n\n\n####[onMessage](https://github.com/angular/angular-hint-log/blob/master/hint-log.js#L43)\n----------------\n#####Use as: onMessage = function(message) {};\n\nSet a behavior to be done when each message is logged. This is an optional step to allow custom\nbehavior when messages are logged. It does not affect the behavior of `logMessage` or `flush`.\n\n####Example\n\n```javascript\nvar hintLog = require('angular-hint-log');\n\nhintLog.onMessage = function(message) {\n  throw new Error(message);\n}\n\n//Throws the error '##Controllers## The best practice is to name controllers with \"Controller\"'\nhintLog.logMessage('##Controllers## The best practice is to name controllers with \"Controller\"');\n```\n\n##Building Angular Hint Log\n\nThe following instructions describe how to include the AngularHintLog dependency in the\nworking directory of an AngularHint module.\n\n1. Working in the module's main directory, install the necessary npm packages:\n\n  ```\n  npm install angular-hint-log browserify gulp vinyl-source-stream --save\n  ```\n\n2. Create a `gulpfile.js` file to give instructions to gulp to build the module:\n\n  ```\n  //gulpfile.js\n\n  var gulp = require('gulp');\n  var source = require('vinyl-source-stream');\n  var browserify = require('browserify');\n\n  var main = require('./package.json').main;\n\n  gulp.task('watch', function(){\n    gulp.watch(['./**/*.js', '!./dist/*.js'], ['browserify']);\n  });\n\n  gulp.task('browserify', function() {\n    var bundleStream = browserify('./' + main).bundle().pipe(source(main));\n    return bundleStream.pipe(gulp.dest('./dist'));\n  });\n\n  gulp.task('default', ['browserify']);\n\n  ```\n\n3. Add the AngularHintLog dependency to the module's files using `require`:\n\n  ```javascript\n  var hintLog = angular.hint = require('angular-hint-log');\n  ```\n  In the build step, browserify interprets the `require` command to load the functionality of\n  AngularHintLog into the hintLog variable. Creating `angular.hint` allows use of `var hintLog = angular.hint`\n  in unit testing.\n\n4. Since the module is now built by gulp using browserify, it must be built before\nuse and testing. For unit testing with karma, install the following package with npm:\n\n  ```\n  npm install karma-bro --save\n  ```\n\n  And update the `karma.conf.js` to pre-process the files:\n\n  ```\n    //karma.conf.js\n    frameworks: ['browserify', 'jasmine'],\n    preprocessors: {\n        'your-module-file.js': ['browserify']\n    }\n  ```\n  Alternatively, use the `gulp` command to build the files. Built files will be located\n  in the `\\dist` directory.\n\n5. AngularHintLog is ready to log messages!\n\n  ```\n  hintLog.logMessage('##Module Name## Error message');\n  ```\n\n  This call adds a message to the AngularHintLog queue. The `##Module Name##` prefix is optional but\n  will allow AngularHint to group the message with other messages from the same module.\n\n## [License](LICENSE)\n\nCopyright 2014 Google, Inc. http://angularjs.org\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n",
  "readmeFilename": "README.md",
  "_id": "angular-hint-log@0.3.0",
  "dist": {
    "shasum": "c60b4350985ce098c46b52d62b6fef87c4281129"
  },
  "_from": "angular-hint-log@0.3.0",
  "_resolved": "https://registry.npmjs.org/angular-hint-log/-/angular-hint-log-0.3.0.tgz"
}
